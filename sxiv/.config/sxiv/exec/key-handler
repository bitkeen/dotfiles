#!/bin/sh

# Called by sxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon, one path per line: all marked images, if in thumbnail
# mode and at least one image has been marked, otherwise the current image.
# sxiv(1) blocks until this script terminates. It then checks which images
# have been modified and reloads them.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.

APP_NAME='sxiv'

rotate() {
    degree="$1"
    tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
        # Use jpegtran for lossless transformation of JPEG files.
        case "$(file -b -i "$file")" in
            image/jpeg*)
                jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
            *)
                mogrify  -rotate "$degree" "$file" ;;
        esac
    done
}

case "$1" in
    'e')
        while read file; do command -v gimp && gimp "$file" & done ;;
	'd')
        while read file;
        do
            notify-send --app-name "$APP_NAME" -i "$(readlink -f "$file")" "Moving $file to trash" &&
                gio trash "$file"
        done ;;
	'D')
        while read file;
        do
            [ "$(printf "No\\nYes" |
                dmenu-configured -p "Delete $file?")" = 'Yes' ] &&
                notify-send --app-name "$APP_NAME" -i "$(readlink -f "$file")" "Deleting $file" &&
                rm "$file"
        done ;;
    'x')
        # Move image(s) to a subdirectory of XDG_PICTURES_DIR.
        while read file;
        do
            [ -z "$destdir" ] &&
                destdir="$(find "$(xdg-user-dir PICTURES)" -type d -exec ls -d {} \; |
                dmenu-configured -l 20 -p 'Where to move?')"
            [ -z "$destdir" ] && exit 1
            mv "$file" "$destdir" &&
                notify-send --app-name "$APP_NAME" -i "$destdir/$file" "$file moved to $destdir" &
        done ;;
    'y')
        # Copy image.
        while read file;
        do
            xclip -selection clipboard -target image/png "$file" &&
                notify-send --app-name "$APP_NAME" -i "$(readlink -f "$file")" "$file copied to clipboard" &
        done ;;
    'Y')
        # Copy image name.
        while read file;
        do
            echo -n "$file" | xclip -selection clipboard &&
            notify-send "'$file' copied to clipboard" &
        done ;;
    'comma')
        rotate 270 ;;
    'period')
        rotate  90 ;;
    'slash')
        rotate 180 ;;
    'C-c')
        tr '\n' '\0' | xargs -0 wallpaper-center & ;;
    'C-f')
        tr '\n' '\0' | xargs -0 wallpaper-fill & ;;
    'C-m')
        tr '\n' '\0' | xargs -0 wallpaper-max & ;;
esac
