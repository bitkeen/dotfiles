---
- name: configure keyboard and touchpad for X11
  copy:
    src: '{{ item }}'
    dest: /etc/X11/xorg.conf.d/
  loop:
    - xorg.conf.d/00-keyboard.conf
    - xorg.conf.d/10-touchpad.conf

- name: configure sudo
  copy:
    src: sudoers.d/01_general
    dest: /etc/sudoers.d/
    mode: 0440

- name: configure keyboard and font for virtual console
  command:
    cmd: '{{ role_path }}/files/vconsole.sh'

- name: create symlinks
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
    force: '{% if "force" in item %} {{ item.force }} {% else %} no {% endif %}'
  loop:
    - {
      src: '{{ dirs.dotfiles_local }}',
      dest: '{{ dotfiles_home }}/.dotfiles.local'
    }
    - {
      src: '/run/media/user',
      dest: '{{ user_home }}/media',
      force: yes
    }

# https://wiki.archlinux.org/index.php/GNOME/Keyring#PAM_method
- name: configure PAM for GNOME Keyring
  lineinfile:
    path: /etc/pam.d/login
    line: '{{ item.line }}'
    regexp: '{{ item.line }}'
    insertafter: '{{ item.pattern }}'
  loop:
    - {
      line: 'auth       optional     pam_gnome_keyring.so',
      pattern: '^auth'
    }
    - {
      line: 'session    optional     pam_gnome_keyring.so auto_start',
      pattern: '^session'
    }

- name: configure pacman
  lineinfile:
    path: '/etc/pacman.conf'
    line: '{{ item.line }}'
    regexp: '{{ item.regexp }}'
    backrefs: yes  # To avoid adding lines to the end of the file in case a regexp does not match.
  loop:
    - {
      line: 'VerbosePkgLists',
      regexp: '^#[ ]?VerbosePkgLists$'
    }
    - {
      line: 'IgnoreGroup = custom',
      regexp: '^#[ ]?IgnoreGroup ='
    }
    - {
      # Double quotes are important to keep the line break.
      line: "# Automatically enable colors only when pacmanâ€™s output is on a tty.\nColor",
      regexp: '^#[ ]?Color'
    }

- name: get submodules
  become: yes
  become_user: '{{ user_name }}'
  command:
    cmd: git submodule update --init --recursive
    chdir: '{{ dotfiles_home }}'

- name: generate helptags for vim
  become: yes
  become_user: '{{ user_name }}'
  command:
    cmd: vim -c 'helptags ALL' -c 'quit'

- name: add user to groups
  user:
    name: '{{ user_name }}'
    groups: '{{ item }}'
    append: yes
  loop:
    - docker
    - video

- name: install gtk keymaps
  copy:
    src: gtk/gtk-keys.css
    dest: /usr/share/themes/Custom/gtk-3.0/

- name: put docker config in place
  copy:
    src: docker/daemon.json
    dest: /etc/docker/

- name: set zsh as default shell for non-root user
  user:
    name: '{{ user_name }}'
    shell: /bin/zsh

- name: install pre-commit hook in .dotfiles
  become: yes
  become_user: '{{ user_name }}'
  command:
    chdir: '{{ dotfiles_home }}'
    # User Python packages won't be available in $PATH at this point.
    cmd: '{{ dirs.dot_local_bin }}/pre-commit install'

- name: set wallpaper
  shell:
    cmd: ln -sf '{{ role_path }}/files/default-wallpaper' '{{ user_home }}/.wallpaper'
    # Command will not be run if the file already exists.
    creates: '{{ user_home }}/.wallpaper'
